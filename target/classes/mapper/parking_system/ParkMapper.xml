<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wsx.park.system.mapper.parking_system.ParkMapper">
  <resultMap id="BaseResultMap" type="com.wsx.park.system.domain.parking_system.Park">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="car_id" jdbcType="VARCHAR" property="carId" />
    <result column="parking_space_id" jdbcType="INTEGER" property="parkingSpaceId" />
    <result column="start_park_time" jdbcType="TIMESTAMP" property="startParkTime" />
    <result column="end_park_time" jdbcType="TIMESTAMP" property="endParkTime" />
    <result column="fee" jdbcType="DOUBLE" property="fee" />
    <result column="is_del" jdbcType="TINYINT" property="isDel" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.wsx.park.system.domain.parking_system.Park" useGeneratedKeys="true">
    insert into park (user_id, car_id, parking_space_id, 
      start_park_time, end_park_time, fee, 
      is_del, create_time, update_time
      )
    values (#{userId,jdbcType=INTEGER}, #{carId,jdbcType=VARCHAR}, #{parkingSpaceId,jdbcType=INTEGER}, 
      #{startParkTime,jdbcType=TIMESTAMP}, #{endParkTime,jdbcType=TIMESTAMP}, #{fee,jdbcType=DOUBLE}, 
      #{isDel,jdbcType=TINYINT}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.wsx.park.system.domain.parking_system.Park">
    update park
    set user_id = #{userId,jdbcType=INTEGER},
      car_id = #{carId,jdbcType=VARCHAR},
      parking_space_id = #{parkingSpaceId,jdbcType=INTEGER},
      start_park_time = #{startParkTime,jdbcType=TIMESTAMP},
      end_park_time = #{endParkTime,jdbcType=TIMESTAMP},
      fee = #{fee,jdbcType=DOUBLE},
      is_del = #{isDel,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select id, user_id, car_id, parking_space_id, start_park_time, end_park_time, fee, 
    is_del, create_time, update_time
    from park
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select id, user_id, car_id, parking_space_id, start_park_time, end_park_time, fee, 
    is_del, create_time, update_time
    from park
    order by id desc
  </select>
</mapper>
